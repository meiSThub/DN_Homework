策略模式
    策略模式是一种定义一些列算法的方法，从概念上来看，所有这些算法完成的都是相同的工作，
只是实现不同，它可以以形同的方式，调用所有的算法，减少了各种算法类与使用算法类之间的耦合。

实现例子：
    开发一个SimUiDuck游戏，游戏中出现各种鸭子，如会戏水的，会叫的，不同种类的鸭子有不同的类型，
    用display方法描述鸭子类型，要求特定的鸭子会飞。这里鸭子会不会飞就可以看成是一种策略，
    可以定义一个策略接口，即把鸭子飞的方法定义在一个接口当中，目前策略实现有两种：会飞和不会飞。
    在具体的鸭子实现类中，实现不同的策略模式，就可以实现有的鸭子会飞，有的鸭子不会飞了。

在Android源码中，TabHost中有一个TabSpec类就用到了策略模式：
策略模式就是这样，不自己去实现，而是交给特定的类去实现，这里的mIndicatorStrategy = new LabelIndicatorStrategy(label)
不就相当于之前的flayable=new FlyWithWings();这就是策略模式的精髓。最后给大家看看整体的图片。

要点总结：
    封装变化
    多用组合,少用继承
    针对接口编程，不针对实现

推荐博客：http://blog.csdn.net/qq_29282475/article/details/50174449